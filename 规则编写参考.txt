RuleParser('/{re=exrex:(||v[1-3]|v[1-3]\.[0-5]|api|api/v[1-3]|api/v[1-3]\.[0-5])}$/').parse() 
['//', '//', '/v1/', '/v2/', '/v3/', '/v1.0/', '/v1.1/', '/v1.2/', '/v1.3/', '/v1.4/', '/v1.5/', '/v2.0/', '/v2.1/', '/v2.2/', '/v2.3/', '/v2.4/', '/v2.5/', '/v3.0/', '/v3.1/', '/v3.2/', '/v3.3/', '/v3.4/', '/v3.5/', '/api/', '/api/v1/', '/api/v2/', '/api/v3/', '/api/v1.0/', '/api/v1.1/', '/api/v1.2/', '/api/v1.3/', '/api/v1.4/', '/api/v1.5/', '/api/v2.0/', '/api/v2.1/', '/api/v2.2/', '/api/v2.3/', '/api/v2.4/', '/api/v2.5/', '/api/v3.0/', '/api/v3.1/', '/api/v3.2/', '/api/v3.3/', '/api/v3.4/', '/api/v3.5/']

RuleParser('/{re=exrex:(|v[1-3]|v1\.[0-9]|v[2-3]\.[0-5]|api|api/v[1-3]|api/v1\.[0-9]|api/v[2-3]\.[0-5])}$/').parse() 
['//', '/v1/', '/v2/', '/v3/', '/v1.0/', '/v1.1/', '/v1.2/', '/v1.3/', '/v1.4/', '/v1.5/', '/v1.6/', '/v1.7/', '/v1.8/', '/v1.9/', '/v2.0/', '/v2.1/', '/v2.2/', '/v2.3/', '/v2.4/', '/v2.5/', '/v3.0/', '/v3.1/', '/v3.2/', '/v3.3/', '/v3.4/', '/v3.5/', '/api/', '/api/v1/', '/api/v2/', '/api/v3/', '/api/v1.0/', '/api/v1.1/', '/api/v1.2/', '/api/v1.3/', '/api/v1.4/', '/api/v1.5/', '/api/v1.6/', '/api/v1.7/', '/api/v1.8/', '/api/v1.9/', '/api/v2.0/', '/api/v2.1/', '/api/v2.2/', '/api/v2.3/', '/api/v2.4/', '/api/v2.5/', '/api/v3.0/', '/api/v3.1/', '/api/v3.2/', '/api/v3.3/', '/api/v3.4/', '/api/v3.5/']


RuleParser('{date=year:2017-2018}$').parse() 
['2017', '17', '2018', '18']

RuleParser('{date=mon:9-10}$').parse() 
['9', '09', '10']

RuleParser('{date=day:12-15}$').parse() 
['12', '13', '14', '15']

RuleParser('{date=day:9-10}$').parse() 
['9', '09', '10']

RuleParser('{date=year_mon:201709-201712}$').parse() 
['201709', '20179', '201710', '201711', '201712']

RuleParser('{date=mon_day:0928-1003}$').parse()
['0930', '1001', '0929', '09-29', '1003', '10-01', '09-30', '10-02', '10-03', '1002']

RuleParser('{date=year_mon_day:20170111-20170112}$').parse()  
['170112', '20170112', '17-01-12', '2017-01-12']

RuleParser('{date=mon_day_year:01112017-01122017}$').parse()
['2017-01-12', '17-01-12', '170112', '20170112']

RuleParser('{int=series:1-5}$').parse() 
['1', '2', '3', '4', '5']

RuleParser('{int=series$2:1-15}$').parse()  
['1', '3', '5', '7', '9', '11', '13', '15']

RuleParser('{int=digits#3:1-5}$').parse() 
['123', '321', '234', '432', '345', '543']

RuleParser('{int=overlap#3:1-9}$').parse() 
['111', '222', '333', '444', '555', '666', '777', '888', '999']

RuleParser('{int=overlap#3:11-22}$').parse() 
['111111', '121212', '131313', '141414', '151515', '161616', '171717', '181818', '191919', '202020', '212121', '222222']

RuleParser('{str=letters#3:a-d}$').parse() 
['abc', 'bcd']

RuleParser('{str=overlap#3:A-D}$').parse()
['AAA', 'BBB', 'CCC', 'DDD']

RuleParser('{re=exrex:(201[7-9]{1}[1]{1}[8-9]{1})}$').parse() 
['201718', '201719', '201818', '201819', '201918', '201919']

RuleParser('{re=sre_yield:(201[7-9]{1}[1]{1}[8-9]{1})}$').parse()
['201718', '201818', '201918', '201719', '201819', '201919']